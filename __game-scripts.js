var JoinOrCreateButtonHandler=pc.createScript("joinOrCreateButtonHandler");JoinOrCreateButtonHandler.prototype.initialize=function(){var t=this.app;this.entity.button.on("click",(function(e){t.fire("joinOrCreateButtonHandler:clicked",{sceneName:"GamePlay",action:"joinOrCreate"})}))};var JoinButtonHandler=pc.createScript("joinButtonHandler");JoinButtonHandler.prototype.initialize=function(){var n=this.app;this.entity.button.on("click",(function(t){n.fire("joinButtonHandler:clicked",{sceneName:"GamePlay",action:"join"})}))};var ButtonHandler=pc.createScript("createButtonHandler");ButtonHandler.prototype.initialize=function(){var t=this.app;this.entity.button.on("click",(function(e){t.fire("createButtonHandler:clicked",{sceneName:"GamePlay",action:"create"})}))};var RoomListButtonHandler=pc.createScript("roomListButtonHandler");RoomListButtonHandler.prototype.initialize=function(){var t=this.app;this.entity.button.on("click",(function(o){t.fire("roomListButtonHandler:clicked",{sceneName:"RoomList",action:"none"})}))};var MainMenu=pc.createScript("mainMenu");MainMenu.prototype.initialize=function(){this.app.colyseus=new Colyseus.Client("wss://tutorial-playcanvas-server.glitch.me"),this.app.roomName="my_room",this.app.on("createButtonHandler:clicked",this.loadScene,this),this.app.on("joinButtonHandler:clicked",this.loadScene,this),this.app.on("joinOrCreateButtonHandler:clicked",this.loadScene,this),this.app.on("roomListButtonHandler:clicked",this.loadScene,this),this.on("destroy",(function(){this.app.off("createButtonHandler:clicked",this.loadScene,this),this.app.off("joinButtonHandler:clicked",this.loadScene,this),this.app.off("joinOrCreateButtonHandler:clicked",this.loadScene,this),this.app.off("roomListButtonHandler:clicked",this.loadScene,this)}),this)},MainMenu.prototype.loadScene=function(t){this.app.action=t.action;for(const t of this.app.root.findByTag("button"))t.button.active=!1;const e=this.app.root.findByName("MainMenu"),i=this.app.scenes.find(t.sceneName);this.app.scenes.loadSceneHierarchy(i.url,(function(t,i){t?console.error(t):e.destroy()}))};var Gameplay=pc.createScript("gameplay");Gameplay.attributes.add("cameraEntity",{type:"entity",title:"Camera Entity"}),Gameplay.attributes.add("cameraOffset",{type:"vec3",default:[0,5,-10],title:"Camera Offset",description:"Offset position of the camera relative to Player 1"}),Gameplay.attributes.add("uiDistance",{type:"number",default:2,title:"UI Distance",description:"Distance of the gamePlay2DScreen from the camera"}),Gameplay.attributes.add("maxSpeed",{type:"number",default:45,title:"Max Speed",description:"The maximum speed the player can achieve"}),Gameplay.prototype.initialize=async function(){this.mainPlayer=this.app.root.findByName("Player1"),this.otherPlayer=this.app.root.findByName("Player2"),this.floorPlane=this.app.root.findByName("Plane"),this.loadingMessage=this.app.root.findByName("loadingMessage"),this.mainPlayerId="",this.playerObjects={},this.rotationSpeed=90,this.movementSpeed=15,this.currentSpeed=0,this.maxSpeed=90,this.acceleration=30,this.deceleration=70,this.turningDeceleration=50,this.movementEnabled=!1,this.canMove=!1,this.initialPosition=new pc.Vec3(0,1.031,0),this.lockedPosition=new pc.Vec3(0,1.031,0),this.mainPlayer.setPosition(this.initialPosition),this.app.on("game:enableMovement",(()=>{this.canMove=!0}));try{const t=(await this.app.colyseus.getAvailableRooms(this.app.roomName)).find((t=>t.clients<2));this.room=t?await this.app.colyseus.joinById(t.roomId):await this.app.colyseus.create(this.app.roomName)}catch(t){this.errMessage=t.message}if(this.room){if(this.loadingMessage.enabled=!1,this.floorPlane.enabled=!0,this.mainPlayerId=this.room.sessionId,this.initPlayers(this.room),this.room.state.players.length>2)return this.room.leave(),void this.displayError("Room is full. You've been removed.");this.app.root.findByName("roomIdValue").element.text=this.room.id,this.app.root.findByName("roomNameValue").element.text=this.room.name,2===this.room.state.players.length&&this.app.fire("game:startCountdown"),this.room.send("updatePosition",{x:this.initialPosition.x,y:this.initialPosition.y,z:this.initialPosition.z}),this.app.on("game:enableMovement",(()=>{this.movementEnabled=!0,this.room.send("updatePosition",{x:this.mainPlayer.getPosition().x,y:this.mainPlayer.getPosition().y,z:this.mainPlayer.getPosition().z})}))}else this.loadingMessage.enabled=!1,this.displayError(this.errMessage?`ERROR: ${this.errMessage}`:"ERROR JOINING THE GAME!");this.groundShape=new pc.BoundingBox(new pc.Vec3(0,0,0),new pc.Vec3(4,.001,4)),this.app.on("backButtonHandler:clicked",this.loadMenu,this),this.on("destroy",(function(){this.app.off("backButtonHandler:clicked",this.loadMenu,this)}),this)},Gameplay.prototype.loadMenu=async function(){if(this.room)setTimeout((async()=>{await this.room.leave(!0);const t=this.app.root.findByName("GamePlay"),e=this.app.scenes.find("MainMenu");this.app.scenes.loadSceneHierarchy(e.url,(function(e,i){e?console.error(e):t.destroy()}))}),2e3);else{const t=this.app.root.findByName("GamePlay"),e=this.app.scenes.find("MainMenu");this.app.scenes.loadSceneHierarchy(e.url,(function(e,i){e?console.error(e):t.destroy()}))}},Gameplay.prototype.initPlayers=function(t){t.state.players.onAdd(((e,i)=>{if(!this.playerObjects.hasOwnProperty(i)){const s=i===t.sessionId,o=s?this.mainPlayer:this.otherPlayer.clone();o.enabled=!0,s||this.otherPlayer.getParent().addChild(o);const a=this.initialPosition.clone();o.setPosition(a),this.playerObjects[i]={entity:o,distanceToTravel:0,direction:new pc.Vec3,targetPosition:a.clone(),positionBuffer:[]},this.playerObjects[i].positionBuffer.push({x:a.x,y:a.y,z:a.z,timestamp:Date.now()}),s||this.room.send("updatePosition",{x:a.x,y:a.y,z:a.z}),e.onChange((t=>{if(this.playerObjects[i]){const t=new pc.Vec3(e.x,e.y,e.z);this.playerObjects[i].positionBuffer.push({x:t.x,y:t.y,z:t.z,timestamp:Date.now()})}else console.warn(`Player object for sessionId ${i} is missing.`)}))}})),t.state.players.onRemove(((t,e)=>{this.playerObjects[e]&&(this.playerObjects[e].entity.destroy(),delete this.playerObjects[e])})),t.onLeave((()=>{this.displayError("CLIENT DISCONNECTED!")}))},Gameplay.prototype.getOtherPlayer=function(){for(const t in this.playerObjects)if(t!==this.mainPlayerId)return this.playerObjects[t].entity;return null},Gameplay.prototype.displayError=function(t){for(const t in this.playerObjects)this.playerObjects[t].entity.destroy(),delete this.playerObjects[t];const e=this.app.root.findByName("errorMessage");e.element.text=t,e.enabled=!0},Gameplay.prototype.update=function(t){if(!this.mainPlayer||!this.room)return;this.updateBufferedPositions(t);this.playerObjects[this.mainPlayerId];const e=new pc.Vec3,i=this.mainPlayer.forward.clone();if(!this.canMove){if(this.mainPlayer.setPosition(this.lockedPosition),this.cameraEntity){const t=new pc.Vec3(0,1.5,6),e=this.mainPlayer.getPosition().clone().add(t);this.cameraEntity.setPosition(this.cameraEntity.getPosition().lerp(this.cameraEntity.getPosition(),e,.1)),this.cameraEntity.lookAt(this.mainPlayer.getPosition())}e.lengthSq()>0&&(e.add(this.mainPlayer.getPosition()),this.mainPlayer.setPosition(e),this.room.send("updatePosition",{x:e.x,y:e.y,z:e.z}));for(const t in this.playerObjects){const e=this.playerObjects[t];e&&t!==this.mainPlayerId&&e.entity.setPosition(e.targetPosition)}return}if(this.app.keyboard.isPressed(pc.KEY_W)||this.app.keyboard.isPressed(pc.KEY_UP)?this.currentSpeed=Math.min(this.currentSpeed+this.acceleration*t,this.maxSpeed):this.app.keyboard.isPressed(pc.KEY_S)||this.app.keyboard.isPressed(pc.KEY_DOWN)?this.currentSpeed=Math.max(this.currentSpeed-this.acceleration*t,-this.maxSpeed/2):this.currentSpeed=this.currentSpeed>0?Math.max(this.currentSpeed-this.deceleration*t,0):Math.min(this.currentSpeed+this.deceleration*t,0),0!==this.currentSpeed){const s=i.clone().scale(this.currentSpeed*t);e.add(s)}if((this.app.keyboard.isPressed(pc.KEY_D)||this.app.keyboard.isPressed(pc.KEY_RIGHT))&&(this.mainPlayer.rotateLocal(0,-this.rotationSpeed*t,0),this.currentSpeed>20&&(this.currentSpeed=Math.max(this.currentSpeed-this.turningDeceleration*t,0))),(this.app.keyboard.isPressed(pc.KEY_A)||this.app.keyboard.isPressed(pc.KEY_LEFT))&&(this.mainPlayer.rotateLocal(0,this.rotationSpeed*t,0),this.currentSpeed>20&&(this.currentSpeed=Math.max(this.currentSpeed-this.turningDeceleration*t,0))),e.lengthSq()>0&&(e.add(this.mainPlayer.getPosition()),this.mainPlayer.setPosition(e),this.room.send("updatePosition",{x:e.x,y:e.y,z:e.z})),this.cameraEntity){const t=new pc.Vec3(0,1.5,6),e=this.mainPlayer.getPosition().clone().add(t);this.cameraEntity.setPosition(this.cameraEntity.getPosition().lerp(this.cameraEntity.getPosition(),e,.075)),this.cameraEntity.lookAt(this.mainPlayer.getPosition())}const s=this.app.root.findByName("gamePlay2DScreen");if(s&&this.cameraEntity){const t=this.cameraEntity.getPosition().clone().add(this.cameraEntity.forward.clone().scale(-this.uiDistance));s.setPosition(t)}for(const t in this.playerObjects){const e=this.playerObjects[t];if(e&&t!==this.mainPlayerId){const t=e.entity.getPosition(),i=e.targetPosition,s=.1,o=t.lerp(t,i,s);e.entity.setPosition(o)}}},Gameplay.prototype.reduceSpeed=function(t){this.currentSpeed=Math.max(this.currentSpeed*t,0)},Gameplay.prototype.movePlayerTo=function(t,e){if(!t.targetPosition.equals(e)){if(t.targetPosition.copy(e),t.direction.sub2(t.targetPosition,t.entity.getPosition()),t.distanceToTravel=t.direction.length(),t.entity===this.otherPlayer){const e=t.targetPosition.clone().sub(t.entity.getPosition()).normalize(),i=t.entity.forward.clone().normalize(),s=Math.acos(i.dot(e)),o=(new pc.Vec3).cross(i,e).y>0?1:-1,a=s*pc.math.RAD_TO_DEG;t.entity.rotate(0,o*Math.min(a,this.rotationSpeed*this.app.deltaTime),0)}t.distanceToTravel>0?t.direction.normalize():t.direction.set(0,0,0)}},Gameplay.prototype.updateBufferedPositions=function(t){for(const t in this.playerObjects){const e=this.playerObjects[t];if(e.positionBuffer||(e.positionBuffer=[]),t!==this.mainPlayerId){const t=e.positionBuffer.length;if(t>0){const i=e.positionBuffer[t-1];e.targetPosition.set(i.x,i.y,i.z),e.positionBuffer.length=0}const i=e.entity.getPosition(),s=e.targetPosition,o=.2,a=i.lerp(i,s,o);e.entity.setPosition(a);continue}const i=Date.now();for(;e.positionBuffer.length>0;){const t=e.positionBuffer[0];if(!(i-t.timestamp>=100))break;e.targetPosition.set(t.x,t.y,t.z),e.positionBuffer.shift()}const s=e.entity.getPosition(),o=e.targetPosition,a=.1,n=s.lerp(s,o,a);e.entity.setPosition(n)}};var RoomList=pc.createScript("roomList");RoomList.prototype.initialize=async function(){this.tableData=this.app.root.findByName("roomListTable"),this.tableData.element.text="FINDING GAMES...";try{if(this.rooms=await this.app.colyseus.getAvailableRooms(this.app.roomName),this.rooms&&this.rooms.length>0){let t="";const e="       ";for(let o of this.rooms)t=t+o.name+e+o.roomId+e+o.clients+" connected\n";this.tableData.element.text=t}else this.tableData.element.text="NO GAMES FOUND!"}catch(t){this.tableData.element.text=`ERROR: ${t.message}`}this.app.on("backButtonHandler:clicked",this.loadMenu,this),this.on("destroy",(function(){this.app.off("backButtonHandler:clicked",this.loadMenu,this)}),this)},RoomList.prototype.loadMenu=function(){const t=this.app.root.findByName("RoomList"),e=this.app.scenes.find("MainMenu");this.app.scenes.loadSceneHierarchy(e.url,(function(e,o){e?console.error(e):t.destroy()}))};var BackButtonHandler=pc.createScript("backButtonHandler");BackButtonHandler.prototype.initialize=function(){var t=this.app;this.entity.button.on("click",(function(n){t.fire("backButtonHandler:clicked")}))};var PlayerModelSetup=pc.createScript("playerModelSetup");PlayerModelSetup.attributes.add("modelAsset",{type:"asset",assetType:"container",title:"GLB Container"}),PlayerModelSetup.prototype.initialize=function(){if(this.modelAsset){var e=this.modelAsset.resource.instantiateRenderEntity();e.setLocalEulerAngles(-90,0,0),this.entity.addChild(e),this.modelInstance=e}else console.error("Model asset not assigned!")};var FollowCameraUI=pc.createScript("followCameraUI");FollowCameraUI.attributes.add("target",{type:"entity",title:"Target",description:"The Entity to follow, usually Player 1"}),FollowCameraUI.attributes.add("distance",{type:"number",default:4,title:"Distance",description:"How far the camera should be from the target entity"}),FollowCameraUI.attributes.add("uiScreen",{type:"entity",title:"UI Screen Entity",description:"The entity that handles the UI (gamePlay2DScreen) and should follow the camera at a specific distance"}),FollowCameraUI.attributes.add("uiOffset",{type:"vec3",default:[0,0,-.5],title:"UI Offset",description:"Relative offset position for the UI screen entity from the camera"}),FollowCameraUI.prototype.initialize=function(){this.cameraPosition=new pc.Vec3,this.targetOffset=new pc.Vec3(0,1,-this.distance),this.uiTargetPosition=new pc.Vec3},FollowCameraUI.prototype.postUpdate=function(t){if(this.target){var e=this.target.getPosition();this.cameraPosition.copy(e).add(this.targetOffset),this.entity.getPosition().lerp(this.entity.getPosition(),this.cameraPosition,.1),this.entity.lookAt(e),this.entity.setPosition(this.cameraPosition),this.uiScreen&&(this.uiTargetPosition.copy(this.entity.getPosition()).add(this.uiOffset),this.uiScreen.setPosition(this.uiTargetPosition))}};var GameLogic=pc.createScript("gameLogic");GameLogic.prototype.initialize=function(){this.roomFull=!1,this.countdownActive=!1,this.countdownTime=3,this.app.on("playerJoined",this.checkRoomStatus,this)},GameLogic.prototype.checkRoomStatus=function(t){2!==t||this.roomFull||(this.roomFull=!0,this.startCountdown())},GameLogic.prototype.startCountdown=function(){this.countdownActive=!0,this.showCountdownUI(),this.app.fire("game:startCountdown",this.countdownTime)},GameLogic.prototype.showCountdownUI=function(){const t=this.app.root.findByName("CountdownUI");t.enabled=!0;const o=t.element,n=setInterval((()=>{o.text=this.countdownTime.toString(),this.countdownTime--,this.countdownTime<0&&(clearInterval(n),t.enabled=!1,this.app.fire("game:enableMovement"))}),1e3)};var CountdownUI=pc.createScript("countdownUI");CountdownUI.attributes.add("startPosition",{type:"vec3",title:"Start Position",default:[0,0,0]}),CountdownUI.attributes.add("startRadius",{type:"number",default:5,title:"Start Radius"}),CountdownUI.attributes.add("textElement",{type:"entity"}),CountdownUI.prototype.initialize=function(){this.countdownTextEntity=this.entity.findByName("CountdownText"),this.countdownTextEntity&&this.countdownTextEntity.element?(this.countdownText=this.countdownTextEntity.element,this.countdownText.text="Waiting for Players...",this.mainPlayer=this.app.root.findByName("Player1"),this.gameplayScript=this.app.root.findByName("GamePlay").script.gameplay,this.countdownStarted=!1,this.app.on("update",this.checkPlayersNearStart,this)):console.error("CountdownText entity or element component not found!")},CountdownUI.prototype.checkPlayersNearStart=function(){if(this.countdownStarted)return;const t=this.gameplayScript.getOtherPlayer();if(!t)return void(this.countdownText.text="Waiting for Players...");const e=this.mainPlayer.getPosition().distance(this.startPosition),n=t.getPosition().distance(this.startPosition);e<=this.startRadius&&n<=this.startRadius?(console.log("Both players detected near the start position."),this.app.off("update",this.checkPlayersNearStart,this),this.startCountdown()):this.countdownText.text="Waiting for Players..."},CountdownUI.prototype.startCountdown=function(){this.countdownStarted=!0,this.countdownTime=3,this.updateCountdownText();const t=setInterval((()=>{this.countdownTime--,this.updateCountdownText(),this.textElement.element.text=this.countdownTime,this.countdownTime<0&&(clearInterval(t),this.countdownTextEntity.enabled=!1,this.app.fire("game:enableMovement"))}),1e3)},CountdownUI.prototype.updateCountdownText=function(){this.countdownText.text=this.countdownTime>0?this.countdownTime.toString():"GO!",this.textElement.element.text=this.countdownTime>0?this.countdownTime.toString():"GO!"};var RaceFinishChecker=pc.createScript("raceFinishChecker");RaceFinishChecker.attributes.add("finishLineX",{type:"number",default:-524.55,title:"Finish Line X Position",description:"The X coordinate of the vertical finish line."}),RaceFinishChecker.attributes.add("finishLineWidth",{type:"number",default:4,title:"Finish Line Width",description:"The width of the finish line for detection."}),RaceFinishChecker.prototype.initialize=function(){this.mainPlayer=this.app.root.findByName("Player1"),this.gameplayScript=this.app.root.findByName("GamePlay").script.gameplay,this.hasWinner=!1},RaceFinishChecker.prototype.update=function(i){if(this.hasWinner)return;if(this.otherPlayer=this.gameplayScript.getOtherPlayer(),!this.otherPlayer)return;const e=this.finishLineX-this.finishLineWidth/2,n=this.finishLineX+this.finishLineWidth/2,t=this.mainPlayer.getPosition(),h=this.otherPlayer.getPosition();t.x>=e&&t.x<=n?this.determineWinner(t,h,"MainMenu 2","MainMenu 3"):h.x>=e&&h.x<=n&&this.determineWinner(h,t,"MainMenu 3","MainMenu 2")},RaceFinishChecker.prototype.determineWinner=function(i,e,n,t){this.hasWinner||(e.z<i.z?(this.hasWinner=!0,this.handleWin(t)):(this.hasWinner=!0,this.handleWin(n)))},RaceFinishChecker.prototype.handleWin=function(i){this.loadScene(i),setTimeout((()=>{this.gameplayScript&&this.gameplayScript.disconnect&&this.gameplayScript.disconnect()}),2e3)},RaceFinishChecker.prototype.loadScene=function(i){const e=this.app.root.findByName("GamePlay"),n=this.app.scenes.find(i);n?this.app.scenes.loadSceneHierarchy(n.url,(function(i,n){i?console.error("Failed to load scene:",i):e.destroy()})):console.error("Scene not found:",i)};var CheckpointTrigger=pc.createScript("checkpointTrigger");CheckpointTrigger.prototype.initialize=function(){this.player=this.app.root.findByName("Player"),this.proximityThreshold=2},CheckpointTrigger.prototype.update=function(t){this.player&&(this.entity.getPosition().distance(this.player.getPosition())<this.proximityThreshold&&this.onCheckpointReached())},CheckpointTrigger.prototype.onCheckpointReached=function(){this.player.script.player.respawnPoint=this.entity.getPosition().clone(),console.log("Checkpoint reached! Respawn point updated."),this.entity.enabled=!1};var BorderDeath=pc.createScript("borderDeath");BorderDeath.prototype.initialize=function(){},BorderDeath.prototype.update=function(e){};var TrackBoundaryChecker=pc.createScript("trackBoundaryChecker");TrackBoundaryChecker.attributes.add("gameplayScript",{type:"entity",title:"Gameplay Script"}),TrackBoundaryChecker.attributes.add("instructionText",{type:"entity",title:"Instruction Text"}),TrackBoundaryChecker.attributes.add("safeZoneWidth",{type:"number",default:9,title:"Safe Zone Width"}),TrackBoundaryChecker.attributes.add("safeZoneHeight",{type:"number",default:15,title:"Safe Zone Height"}),TrackBoundaryChecker.prototype.initialize=function(){this.gameplayScript&&this.instructionText?(this.gameplayInstance=this.gameplayScript.script.gameplay,this.gameplayInstance?(this.trackPlanes=[],this.app.root.find(function(t){"Plane"===t.name&&this.trackPlanes.push(t)}.bind(this)),this.trackPlanes.length||console.warn("No track planes named 'Plane' found in the scene.")):console.error("Gameplay script is not properly assigned to the entity.")):console.error("Gameplay script or instruction text is missing.")},TrackBoundaryChecker.prototype.getTrackPlanes=function(){return this.trackPlanes},TrackBoundaryChecker.prototype.update=function(t){if(!this.gameplayInstance||!this.instructionText)return;const e=this.gameplayInstance.mainPlayer.getPosition();let n=!1;for(let t=0;t<this.trackPlanes.length;t++){const a=this.trackPlanes[t],r=a.getPosition(),i=a.getRotation(),c=this.safeZoneWidth/2,s=this.safeZoneHeight/2,o=[new pc.Vec3(-c,0,-s),new pc.Vec3(c,0,-s),new pc.Vec3(c,0,s),new pc.Vec3(-c,0,s)].map((t=>{const e=new pc.Vec3;return i.transformVector(t,e),e.add(r)}));if(n=this.isPointInPolygon(e,o),n)break}n||this.gameplayInstance.currentSpeed>15&&(this.gameplayInstance.currentSpeed=Math.max(this.gameplayInstance.currentSpeed-30*t,15));const a=this.gameplayInstance.currentSpeed||0,r=Math.abs(Math.round(30*a))+" mph";this.instructionText.element.text=`Speed: ${r}`},TrackBoundaryChecker.prototype.isPointInPolygon=function(t,e){let n=!1;for(let a=0,r=e.length-1;a<e.length;r=a++){const i=e[a].x,c=e[a].z,s=e[r].x,o=e[r].z;c>t.z!=o>t.z&&t.x<(s-i)*(t.z-c)/(o-c)+i&&(n=!n)}return n};var OrbHandler=pc.createScript("orbHandler");OrbHandler.attributes.add("gameplayScript",{type:"entity",title:"Gameplay Script"}),OrbHandler.attributes.add("trackBoundaryChecker",{type:"entity",title:"Track Boundary Checker"}),OrbHandler.attributes.add("orbEntity",{type:"entity",title:"Orb Entity"}),OrbHandler.attributes.add("boostSpeed",{type:"number",default:150,title:"Boost Speed"}),OrbHandler.attributes.add("boostDuration",{type:"number",default:2,title:"Boost Duration"}),OrbHandler.attributes.add("boostRadius",{type:"number",default:1.5,title:"Boost Radius"}),OrbHandler.attributes.add("boostLinePosition",{type:"vec3",title:"Boost Line Position"}),OrbHandler.attributes.add("boostLineRadius",{type:"number",default:5,title:"Boost Line Radius"}),OrbHandler.prototype.initialize=function(){this.gameplayScript&&this.trackBoundaryChecker&&this.orbEntity?(this.gameplayInstance=this.gameplayScript.script.gameplay,this.gameplayInstance?(this.trackBoundaryCheckerInstance=this.trackBoundaryChecker.script.trackBoundaryChecker,this.trackBoundaryCheckerInstance?(this.trackPlanes=this.trackBoundaryCheckerInstance.trackPlanes,this.trackPlanes&&this.trackPlanes.length?(this.orbEntity.enabled=!1,this.spawnOrb(),this.boostTimer=null):console.warn("No track planes found in TrackBoundaryChecker.")):console.error("TrackBoundaryChecker script instance is not properly assigned.")):console.error("Gameplay script instance is not properly assigned.")):console.error("Gameplay script, track boundary checker, or orb entity is not assigned.")},OrbHandler.prototype.spawnOrb=function(){const t=this.trackPlanes[Math.floor(Math.random()*this.trackPlanes.length)].getPosition(),e=t.x+(Math.random()*this.trackBoundaryCheckerInstance.safeZoneWidth-this.trackBoundaryCheckerInstance.safeZoneWidth/2),a=t.z+(Math.random()*this.trackBoundaryCheckerInstance.safeZoneHeight-this.trackBoundaryCheckerInstance.safeZoneHeight/2);this.orbEntity.setPosition(e,1.5,a),this.orbEntity.enabled=!0},OrbHandler.prototype.update=function(t){if(!this.orbEntity.enabled||!this.gameplayInstance||!this.gameplayInstance.mainPlayer)return;const e=this.gameplayInstance.mainPlayer.getPosition(),a=this.orbEntity.getPosition();e.distance(a)<this.boostRadius&&this.collectOrb(),this.checkBoostLine(e)},OrbHandler.prototype.collectOrb=function(){this.orbEntity.enabled=!1,this.boostTimer&&clearTimeout(this.boostTimer),this.gameplayInstance.maxSpeed=this.boostSpeed,this.gameplayInstance.currentSpeed=this.boostSpeed,console.log(`Boost activated! maxSpeed: ${this.boostSpeed}, currentSpeed: ${this.boostSpeed}`),this.boostTimer=setTimeout((()=>{const t=setInterval((()=>{this.gameplayInstance.currentSpeed>90?(this.gameplayInstance.currentSpeed-=5,console.log(`Reducing speed: ${this.gameplayInstance.currentSpeed}`)):(this.gameplayInstance.currentSpeed=90,this.gameplayInstance.maxSpeed=90,clearInterval(t),console.log("Speed reset. maxSpeed: 90, currentSpeed: 90"))}),100)}),1e3*this.boostDuration),this.spawnOrb()},OrbHandler.prototype.checkBoostLine=function(t){const e=this.boostLinePosition.x,a=this.boostLineRadius;t.x>=e-a&&t.x<=e+a&&(console.log("Player crossed the boost line! Activating boost."),this.gameplayInstance.maxSpeed=135,this.gameplayInstance.currentSpeed=135,this.boostTimer&&clearTimeout(this.boostTimer),this.boostTimer=setTimeout((()=>{const t=setInterval((()=>{this.gameplayInstance.currentSpeed>90?this.gameplayInstance.currentSpeed-=5:(this.gameplayInstance.currentSpeed=90,this.gameplayInstance.maxSpeed=90,clearInterval(t))}),100)}),1e3*this.boostDuration))};pc.script.createLoadingScreen((function(e){var a,t;a=["body {","    background-color: black;","    margin: 0;","    padding: 0;","    overflow: hidden;","}","","#application-splash-wrapper {","    position: absolute;","    top: 0;","    left: 0;","    height: 100%;","    width: 100%;","    background-color: black;","    display: flex;","    justify-content: center;","    align-items: center;","    animation: gradient-flow 10s infinite linear;","}","","#application-splash {","    position: relative;","    text-align: center;","}","","#application-splash img {","    width: 100%;","    height: 100%;","    object-fit: contain;","    image-rendering: crisp-edges;","    image-rendering: -moz-crisp-edges;","    image-rendering: pixelated;","}","","#progress-bar-container {","    margin-top: 20px;","    height: 8px;","    width: 80%;","    background-color: #1d292c;","    border-radius: 4px;","}","","#progress-bar {","    width: 0%;","    height: 100%;","    background-color: #007bff;","    border-radius: 4px;","}","","@keyframes gradient-flow {","    0% { background: linear-gradient(90deg, #000000, #282828, #000000); }","    50% { background: linear-gradient(90deg, #282828, #000000, #282828); }","    100% { background: linear-gradient(90deg, #000000, #282828, #000000); }","}","",".spark {","    position: absolute;","    width: 20px;","    height: 20px;","    background-color: #007bff;","    border-radius: 50%;","    opacity: 0;","    animation: spark-animation 1.5s infinite;","}","@keyframes spark-animation {","    0% { opacity: 1; transform: translate(0, 0) scale(1); }","    50% { opacity: 0.5; transform: translate(40px, -40px) scale(1.5); }","    100% { opacity: 0; transform: translate(80px, -80px) scale(2); }","}"].join("\n"),(t=document.createElement("style")).type="text/css",t.styleSheet?t.styleSheet.cssText=a:t.appendChild(document.createTextNode(a)),document.head.appendChild(t),function(){var e=document.createElement("div");e.id="application-splash-wrapper",document.body.appendChild(e);var a=document.createElement("div");a.id="application-splash",e.appendChild(a),a.style.display="none";var t=document.createElement("img");t.src="https://playcanvas.com/api/assets/207164480/file/61e08459-d639-46ae-9867-71ab5432685a-removebg-preview.png",a.appendChild(t),t.onload=function(){a.style.display="block"};var n=document.createElement("div");n.id="progress-bar-container",a.appendChild(n);var r=document.createElement("div");r.id="progress-bar",n.appendChild(r);for(var i=0;i<50;i++){var o=document.createElement("div");o.className="spark",a.appendChild(o)}}(),e.on("preload:end",(function(){e.off("preload:progress")})),e.on("preload:progress",(function(e){var a=document.getElementById("progress-bar");a&&(e=Math.min(1,Math.max(0,e)),a.style.width=100*e+"%")})),e.on("start",(function(){var e=document.getElementById("application-splash-wrapper");e.parentElement.removeChild(e)}))}));